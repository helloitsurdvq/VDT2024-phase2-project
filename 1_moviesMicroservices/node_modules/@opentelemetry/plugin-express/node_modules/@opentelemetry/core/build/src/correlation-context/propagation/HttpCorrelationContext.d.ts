/*!
 * Copyright 2020, OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Context, GetterFunction, HttpTextPropagator, SetterFunction } from '@opentelemetry/api';
export declare const CORRELATION_CONTEXT_HEADER = "otcorrelations";
export declare const MAX_NAME_VALUE_PAIRS = 180;
export declare const MAX_PER_NAME_VALUE_PAIRS = 4096;
export declare const MAX_TOTAL_LENGTH = 8192;
/**
 * Propagates {@link CorrelationContext} through Context format propagation.
 *
 * Based on the Correlation Context specification:
 * https://w3c.github.io/correlation-context/
 */
export declare class HttpCorrelationContext implements HttpTextPropagator {
    inject(context: Context, carrier: unknown, setter: SetterFunction): void;
    private _serializeKeyPairs;
    private _getKeyPairs;
    extract(context: Context, carrier: unknown, getter: GetterFunction): Context;
    private _parsePairKeyValue;
}
//# sourceMappingURL=HttpCorrelationContext.d.ts.map